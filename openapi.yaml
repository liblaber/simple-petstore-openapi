openapi: 3.0.0
info:
  version: 1.0.0
  title: Swagger Petstore
  description: This is a sample server Petstore server. You can find out more about Swagger at http://swagger.io or on irc.freenode.net, #swagger.
  license:
    name: MIT
servers:
- url: http://petstore.swagger.io/v1
paths:
  "/pets":
    get:
      summary: List all pets
      description: Returns a list of pets from the system. The response can be paginated by using the 'limit' parameter and following the 'x-next' header for subsequent pages.
      operationId: listPets
      tags:
      - pets
      parameters:
      - name: limit
        in: query
        description: How many items to return at one time (max 100)
        required: false
        schema:
          type: integer
          maximum: 100
          format: int32
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    post:
      summary: Create a pet
      description: Creates a new pet in the store. The request body must contain the pet information according to the Pet schema. Returns a 201 status code upon successful creation.
      operationId: createPets
      tags:
      - pets
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Pet"
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/pets/{petId}":
    get:
      summary: Info for a specific pet
      description: Returns detailed information about a specific pet based on its ID. The pet ID is provided as a path parameter.
      operationId: showPetById
      tags:
      - pets
      parameters:
      - name: petId
        in: path
        required: true
        description: The id of the pet to retrieve
        schema:
          type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Pet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
components:
  schemas:
    Pet:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      maxItems: 100
      items:
        "$ref": "#/components/schemas/Pet"
    Error:
      type: object
      required:
      - code
      - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string